/**
* @desc Automatically generated templates for type module Car2X_Types 
* Warning: File was generated automatically and will be overwritten by the next generation process. 
* Date: Sun Mar 22 20:03:25 CET 2015 
 * @see Car2X_Types
 */
module Car2X_Types_Templates {
  import from Car2X_Types all;
  
  template Car2X_Types.ElmRequest ElmRequest_ValueTemplate (
    Car2X_Types.ElmRequest.modePrefix p_modePrefix, 
    Car2X_Types.ElmRequest.parameterID p_parameterID
  ) := {
    modePrefix := p_modePrefix,
    parameterID := p_parameterID
  }
  
  template Car2X_Types.ElmRequest ElmRequest_MatchTemplate (
    template(present) Car2X_Types.ElmRequest.modePrefix p_modePrefix := ?, 
    template(present) Car2X_Types.ElmRequest.parameterID p_parameterID := ?
  ) := {
    modePrefix := p_modePrefix,
    parameterID := p_parameterID
  }
  
  template Car2X_Types.ElmResponse ElmResponse_ValueTemplate (
    Car2X_Types.ElmResponse.response p_response
  ) := {
    response := p_response
  }
  
  template Car2X_Types.ElmResponse ElmResponse_MatchTemplate (
    template(present) Car2X_Types.ElmResponse.response p_response := ?
  ) := {
    response := p_response
  }
  
  template Car2X_Types.FilterRequest FilterRequest_ValueTemplate (
    Car2X_Types.FilterRequest.reqType p_reqType, 
    Car2X_Types.FilterRequest.reqData p_reqData
  ) := {
    reqType := p_reqType,
    reqData := p_reqData
  }
  
  template Car2X_Types.FilterRequest FilterRequest_MatchTemplate (
    template(present) Car2X_Types.FilterRequest.reqType p_reqType := ?, 
    template(present) Car2X_Types.FilterRequest.reqData p_reqData := ?
  ) := {
    reqType := p_reqType,
    reqData := p_reqData
  }
  
  template Car2X_Types.ReqData ReqData_ValueTemplate (
    Car2X_Types.ReqData.key p_key, 
    template(omit) Car2X_Types.ReqData.interval p_interval := omit
  ) := {
    key := p_key,
    interval := p_interval
  }
  
  template Car2X_Types.ReqData ReqData_MatchTemplate (
    template(present) Car2X_Types.ReqData.key p_key := ?, 
    template Car2X_Types.ReqData.interval p_interval := *
  ) := {
    key := p_key,
    interval := p_interval
  }
  
  template Car2X_Types.FilterResponse FilterResponse_ValueTemplate (
    Car2X_Types.FilterResponse.OpenXCKey p_OpenXCKey, 
    Car2X_Types.FilterResponse.OBD2Key p_OBD2Key, 
    Car2X_Types.FilterResponse.valueA p_valueA, 
    template(omit) Car2X_Types.FilterResponse.valueB p_valueB := omit, 
    Car2X_Types.FilterResponse.respTimestamp p_respTimestamp
  ) := {
    OpenXCKey := p_OpenXCKey,
    OBD2Key := p_OBD2Key,
    valueA := p_valueA,
    valueB := p_valueB,
    respTimestamp := p_respTimestamp
  }
  
  template Car2X_Types.FilterResponse FilterResponse_MatchTemplate (
    template(present) Car2X_Types.FilterResponse.OpenXCKey p_OpenXCKey := ?, 
    template(present) Car2X_Types.FilterResponse.OBD2Key p_OBD2Key := ?, 
    template(present) Car2X_Types.FilterResponse.valueA p_valueA := ?, 
    template Car2X_Types.FilterResponse.valueB p_valueB := *, 
    template(present) Car2X_Types.FilterResponse.respTimestamp p_respTimestamp := ?
  ) := {
    OpenXCKey := p_OpenXCKey,
    OBD2Key := p_OBD2Key,
    valueA := p_valueA,
    valueB := p_valueB,
    respTimestamp := p_respTimestamp
  }
  
}