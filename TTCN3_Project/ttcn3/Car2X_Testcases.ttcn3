/**
 * @author Christian Damm, Sascha Kretzschmann
 * @desc Some simple test cases to start with.
 * @remark This class needs to be extended sophistically.
 */
module Car2X_Testcases {
	
	import from Car2X_ConfigSystem all;

	import from Car2X_Types {type FiltererResponse;}
	import from Car2X_Templates {
		template m_Filterer_vehicleSpeed, mw_Filterer_vehicleSpeed;
	}

	/**
	 * @desc Checks that the vehicle speed is greater 50km/h.
	 * @verdict pass Successfully received vehicle speed.
	 * @verdict fail Not received anything.
	 * @verdict inconclusive Timer ran out.
	 */
	testcase TC_vehicleSpeed_over50 ()
		runs on TesterComponentType
		system SystemComponentType
	{
		var TesterComponentType Tester;
		Tester := TesterComponentType.create;
		
		map(self:filtererPort,system:filtererPort);
		filtererPort.send(m_Filterer_vehicleSpeed);
		t_TC.start;
		var template FiltererResponse v_speed;
		alt{
			[] filtererPort.receive(mw_Filterer_vehicleSpeed) -> value v_speed {
				t_TC.stop;
			}
			[] t_TC.timeout{
				setverdict(inconc);
			}
		}
		if(str2float(v_speed.response) > 50.0){
			setverdict(pass);
		}
		else {
			setverdict(fail);
		}
	unmap(self:filtererPort,system:filtererPort);
	}
	
	
}